apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-admin
  
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis-admin
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      
      labels:
        app: redis-admin
    spec:
      containers:
        - env:
            - name: REDIS_1_HOST
              value: codis-server-0.codis-server.saas.svc.cluster.local
            - name: REDIS_1_NAME
              value: codis-server-0
            - name: REDIS_1_PORT
              value: '6379'              
#            - name: REDIS_1_AUTH
#              value: paascloudredis
            - name: REDIS_2_HOST
              value: codis-server-1.codis-server.saas.svc.cluster.local
            - name: REDIS_2_NAME
              value: codis-server-1
            - name: REDIS_2_PORT
              value: '6379'              
#            - name: REDIS_1_AUTH
#              value: paascloudredis
            - name: REDIS_3_HOST
              value: codis-server-2.codis-server.saas.svc.cluster.local
            - name: REDIS_3_NAME
              value: codis-server-2
            - name: REDIS_3_PORT
              value: '6379'              
#            - name: REDIS_1_AUTH
#              value: paascloudredis
            - name: REDIS_4_HOST
              value: codis-server-3.codis-server.saas.svc.cluster.local
            - name: REDIS_4_NAME
              value: codis-server-3
            - name: REDIS_4_PORT
              value: '6379'              
#            - name: REDIS_1_AUTH
#              value: paascloudredis
          image: erikdubbelboer/phpredisadmin
          imagePullPolicy: Always
          name: redis-admin
          ports:
            - containerPort: 80
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:  
  name: redis-admin
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: redis-admin


