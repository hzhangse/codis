kind: ConfigMap
metadata:
  name: proxy-toml-config
apiVersion: v1
data:
  proxy.toml: |-  
    ##################################################
    #                                                #
    #                  Codis-Proxy                   #
    #                                                #
    ##################################################
    
    # Set Codis Product Name/Auth.
    product_name = "codis-demo"
    product_auth = ""
    
    # Set auth for client session
    #   1. product_auth is used for auth validation among codis-dashboard,
    #      codis-proxy and codis-server.
    #   2. session_auth is different from product_auth, it requires clients
    #      to issue AUTH <PASSWORD> before processing any other commands.
    session_auth = "paascloudredis"
    
    # Set bind address for admin(rpc), tcp only.
    admin_addr = "0.0.0.0:11080"
    
    # Set bind address for proxy, proto_type can be "tcp", "tcp4", "tcp6", "unix" or "unixpacket".
    proto_type = "tcp4"
    proxy_addr = "0.0.0.0:19000"
    
    # Set jodis address & session timeout
    #   1. jodis_name is short for jodis_coordinator_name, only accept "zookeeper" & "etcd".
    #   2. jodis_addr is short for jodis_coordinator_addr
    #   3. proxy will be registered as node:
    #        if jodis_compatible = true (not suggested):
    #          /zk/codis/db_{PRODUCT_NAME}/proxy-{HASHID} (compatible with Codis2.0)
    #        or else
    #          /jodis/{PRODUCT_NAME}/proxy-{HASHID}
    jodis_name = ""
    jodis_addr = ""
    jodis_timeout = "20s"
    jodis_compatible = false
    
    # Set datacenter of proxy.
    proxy_datacenter = ""
    
    # Set max number of alive sessions.
    proxy_max_clients = 20000
    
    # Set max offheap memory size. (0 to disable)
    proxy_max_offheap_size = "1024mb"
    
    # Set heap placeholder to reduce GC frequency.
    proxy_heap_placeholder = "256mb"
    
    # Proxy will ping backend redis (and clear 'MASTERDOWN' state) in a predefined interval. (0 to disable)
    backend_ping_period = "5s"
    
    # Set backend recv buffer size & timeout.
    backend_recv_bufsize = "128kb"
    backend_recv_timeout = "30s"
    
    # Set backend send buffer & timeout.
    backend_send_bufsize = "128kb"
    backend_send_timeout = "30s"
    
    # Set backend pipeline buffer size.
    backend_max_pipeline = 1024
    
    # Set backend never read replica groups, default is false
    backend_primary_only = false
    
    # Set backend parallel connections per server
    backend_primary_parallel = 1
    backend_replica_parallel = 1
    
    # Set backend tcp keepalive period. (0 to disable)
    backend_keepalive_period = "75s"
    
    # Set number of databases of backend.
    backend_number_databases = 16
    
    # If there is no request from client for a long time, the connection will be closed. (0 to disable)
    # Set session recv buffer size & timeout.
    session_recv_bufsize = "128kb"
    session_recv_timeout = "30m"
    
    # Set session send buffer size & timeout.
    session_send_bufsize = "64kb"
    session_send_timeout = "30s"
    
    # Make sure this is higher than the max number of requests for each pipeline request, or your client may be blocked.
    # Set session pipeline buffer size.
    session_max_pipeline = 10000
    
    # Set session tcp keepalive period. (0 to disable)
    session_keepalive_period = "75s"
    
    # Set session to be sensitive to failures. Default is false, instead of closing socket, proxy will send an error response to client.
    session_break_on_failure = false
    
    # Set metrics server (such as http://localhost:28000), proxy will report json formatted metrics to specified server in a predefined period.
    metrics_report_server = ""
    metrics_report_period = "1s"
    
    # Set influxdb server (such as http://localhost:8086), proxy will report metrics to influxdb.
    metrics_report_influxdb_server = ""
    metrics_report_influxdb_period = "1s"
    metrics_report_influxdb_username = ""
    metrics_report_influxdb_password = ""
    metrics_report_influxdb_database = ""
    
    # Set statsd server (such as localhost:8125), proxy will report metrics to statsd.
    metrics_report_statsd_server = ""
    metrics_report_statsd_period = "1s"
    metrics_report_statsd_prefix = ""
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: codis-proxy
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: codis-proxy
    spec:
      imagePullSecrets:
      - name: your-registry
      containers:
      - name: codis-proxy
        image: registry.cn-hangzhou.aliyuncs.com/bohbohman/codis-image
        imagePullPolicy: IfNotPresent               
        command: ["codis-proxy"]
        args: ["-l","log/$(POD_NAME).log","-c","$(CODIS_PATH)/config/proxy.toml","--host-admin","$(POD_IP):11080","--host-proxy","$(POD_IP):19000","--zookeeper","$(ZK_ADDR)","--product_name","$(PRODUCT_NAME)","--pidfile","log/proxy.pid"]
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "codis-admin --dashboard=${DASHBOARD_ADDR} --remove-proxy --addr=${POD_IP}:11080 1>/dev/null 2>&1"]
        env:
        - name: CODIS_PATH
          value: "/gopath/src/github.com/CodisLabs/codis"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ZK_ADDR
          value: "zookeeper:2181"
        - name: DASHBOARD_ADDR
          value: "codis-dashboard:18080"
        - name: PRODUCT_NAME
          value: "paascloud-db-redis"
        - name: PRODUCT_AUTH
          value: "paascloudredis"
        ports:
        - containerPort: 11080
          name: proxy
        - containerPort: 19000
          name: admin
        resources:
          limits:
            cpu: "4"
            memory: 4Gi
          requests:
            cpu: "0.1"
            memory: 0.1Gi
        volumeMounts:
        - name: configmap
          mountPath: /gopath/src/github.com/CodisLabs/codis/config/proxy.toml 
          subPath: path/to/proxy.toml            
      volumes:  
      - name: configmap
        configMap:
          name: proxy-toml-config
          items:
          - key: proxy.toml
            path: path/to/proxy.toml        
